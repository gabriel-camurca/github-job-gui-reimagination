{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\github-job-gui-reimagination\\\\src\\\\contexts\\\\JobsContext.tsx\";\nimport { createContext, useState } from \"react\";\nexport const JobsContext = /*#__PURE__*/createContext({});\nexport function JobsProvider({\n  children\n}) {\n  // function getAllJobs(){\n  // }\n  const {\n    0: type,\n    1: setType\n  } = useState(\"\");\n  const {\n    0: location,\n    1: setLocation\n  } = useState(\"\");\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: company_logo,\n    1: setCompany_logo\n  } = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(JobsContext.Provider, {\n    value: {\n      type,\n      location,\n      title,\n      description,\n      company_logo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/gabri/Documents/GitHub/github-job-gui-reimagination/src/contexts/JobsContext.tsx"],"names":["createContext","useState","JobsContext","JobsProvider","children","type","setType","location","setLocation","title","setTitle","description","setDescription","company_logo","setCompany_logo"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AA8BA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASG,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoD;AAEvD;AAEA;AAEA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACU,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACY,YAAD;AAAA,OAAeC;AAAf,MAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBI,MAAAA,IADyB;AAEzBE,MAAAA,QAFyB;AAGzBE,MAAAA,KAHyB;AAIzBE,MAAAA,WAJyB;AAKzBE,MAAAA;AALyB,KAA7B;AAAA,cAOKT;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\r\n\r\nimport jobs from \"../../jobs.json\"\r\n\r\ninterface Job{\r\n    id:           string,\r\n    type:         string, \r\n    url:          string, \r\n    created_at:   string, \r\n    company:      string, \r\n    company_url:  string, \r\n    location:     string, \r\n    title:        string, \r\n    description:  string, \r\n    how_to_apply: string, \r\n    company_logo: string\r\n}\r\n\r\ninterface JobsContextData{\r\n    type:           string;\r\n    location:       string;\r\n    title:          string;\r\n    description:    string;\r\n    company_logo:   string;\r\n}\r\n\r\ninterface JobsProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const JobsContext = createContext({} as JobsContextData);\r\n\r\nexport function JobsProvider({children}: JobsProviderProps){\r\n\r\n    // function getAllJobs(){\r\n\r\n    // }\r\n\r\n    const [type, setType] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [company_logo, setCompany_logo] = useState(\"\");\r\n\r\n    return(\r\n        <JobsContext.Provider value={{\r\n            type,\r\n            location,\r\n            title,\r\n            description,\r\n            company_logo\r\n        }}>\r\n            {children}\r\n        </JobsContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}