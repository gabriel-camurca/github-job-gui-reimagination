{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\github-job-gui-reimagination\\\\src\\\\contexts\\\\JobsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport jobs from \"../../jobs.json\";\nimport { JobCard } from \"../components/JobCard\";\nexport var JobsContext = /*#__PURE__*/createContext({});\nexport function JobsProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(\"\"),\n      type = _useState[0],\n      setType = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      company_logo = _useState5[0],\n      setCompany_logo = _useState5[1];\n\n  var _useState6 = useState(jobs[2]),\n      uniqueJob = _useState6[0],\n      setUniqueJob = _useState6[1];\n\n  var _useState7 = useState([]),\n      specifiedJobs = _useState7[0],\n      setSpecifiedJobs = _useState7[1];\n\n  function getJob() {\n    var job = jobs[3];\n    setUniqueJob(job);\n  }\n\n  function getJobs() {\n    // const sJ = fetch(\"https://jobs.github.com/positions.json\");\n    // const sJ = jobs;\n    // setSpecifiedJobs(sJ);\n    // for(var i in jobs){\n    //     // setSpecifiedJobs(specifiedJobs.push(i));\n    //     console.log(i);\n    // }\n    jobs.map(function (item) {\n      return console.log(item);\n    });\n  }\n\n  function changeUniqueJob(newJob) {\n    setUniqueJob(newJob);\n  }\n\n  function generateJobCard(prop) {\n    setUniqueJob(prop);\n    return /*#__PURE__*/_jsxDEV(JobCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(JobsContext.Provider, {\n    value: {\n      type: type,\n      location: location,\n      title: title,\n      description: description,\n      company_logo: company_logo,\n      uniqueJob: uniqueJob,\n      getJob: getJob,\n      generateJobCard: generateJobCard,\n      getJobs: getJobs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobsProvider, \"kdr7rEt+8rJ487FrJKEHlyry03A=\");\n\n_c = JobsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobsProvider\");","map":{"version":3,"sources":["C:/Users/gabri/Documents/GitHub/github-job-gui-reimagination/src/contexts/JobsContext.tsx"],"names":["createContext","useState","jobs","JobCard","JobsContext","JobsProvider","children","type","setType","location","setLocation","title","setTitle","description","setDescription","company_logo","setCompany_logo","uniqueJob","setUniqueJob","specifiedJobs","setSpecifiedJobs","getJob","job","getJobs","map","item","console","log","changeUniqueJob","newJob","generateJobCard","prop"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAgCA,OAAO,IAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASK,YAAT,OAAoD;AAAA;;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;;AAAA,kBAE/BL,QAAQ,CAAC,EAAD,CAFuB;AAAA,MAEhDM,IAFgD;AAAA,MAE1CC,OAF0C;;AAAA,mBAGvBP,QAAQ,CAAC,EAAD,CAHe;AAAA,MAGhDQ,QAHgD;AAAA,MAGtCC,WAHsC;;AAAA,mBAI7BT,QAAQ,CAAC,EAAD,CAJqB;AAAA,MAIhDU,KAJgD;AAAA,MAIzCC,QAJyC;;AAAA,mBAKjBX,QAAQ,CAAC,EAAD,CALS;AAAA,MAKhDY,WALgD;AAAA,MAKnCC,cALmC;;AAAA,mBAMfb,QAAQ,CAAC,EAAD,CANO;AAAA,MAMhDc,YANgD;AAAA,MAMlCC,eANkC;;AAAA,mBAQrBf,QAAQ,CAACC,IAAI,CAAC,CAAD,CAAL,CARa;AAAA,MAQhDe,SARgD;AAAA,MAQrCC,YARqC;;AAAA,mBASbjB,QAAQ,CAAC,EAAD,CATK;AAAA,MAShDkB,aATgD;AAAA,MASjCC,gBATiC;;AAWvD,WAASC,MAAT,GAAiB;AACb,QAAMC,GAAG,GAAGpB,IAAI,CAAC,CAAD,CAAhB;AACAgB,IAAAA,YAAY,CAACI,GAAD,CAAZ;AACH;;AAED,WAASC,OAAT,GAAkB;AACd;AACA;AACA;AAEA;AACA;AACA;AACA;AACArB,IAAAA,IAAI,CAACsB,GAAL,CAAS,UAAAC,IAAI;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,KAAb;AACH;;AAED,WAASG,eAAT,CAAyBC,MAAzB,EAAqC;AACjCX,IAAAA,YAAY,CAACW,MAAD,CAAZ;AACH;;AAED,WAASC,eAAT,CAAyBC,IAAzB,EAAkC;AAC9Bb,IAAAA,YAAY,CAACa,IAAD,CAAZ;AACA,wBACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBxB,MAAAA,IAAI,EAAJA,IADyB;AAEzBE,MAAAA,QAAQ,EAARA,QAFyB;AAGzBE,MAAAA,KAAK,EAALA,KAHyB;AAIzBE,MAAAA,WAAW,EAAXA,WAJyB;AAKzBE,MAAAA,YAAY,EAAZA,YALyB;AAMzBE,MAAAA,SAAS,EAATA,SANyB;AAOzBI,MAAAA,MAAM,EAANA,MAPyB;AAQzBS,MAAAA,eAAe,EAAfA,eARyB;AASzBP,MAAAA,OAAO,EAAPA;AATyB,KAA7B;AAAA,cAWKjB;AAXL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAtDeD,Y;;KAAAA,Y","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\r\n\r\nimport jobs from \"../../jobs.json\"\r\nimport { JobCard } from \"../components/JobCard\";\r\n\r\ninterface Job{\r\n    id:           string;\r\n    type:         string;\r\n    url:          string;\r\n    created_at:   string;\r\n    company:      string;\r\n    company_url:  string;\r\n    location:     string;\r\n    title:        string;\r\n    description:  string;\r\n    how_to_apply: string;\r\n    company_logo: string;\r\n}\r\n\r\ninterface JobsContextData{\r\n    type:           string;\r\n    location:       string;\r\n    title:          string;\r\n    description:    string;\r\n    company_logo:   string;\r\n    uniqueJob:      Job;\r\n    getJob:         () => void;\r\n    generateJobCard: (arg0: Job) => ReactNode;\r\n    getJobs:        () => void;\r\n}\r\n\r\ninterface JobsProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const JobsContext = createContext({} as JobsContextData);\r\n\r\nexport function JobsProvider({children}: JobsProviderProps){\r\n\r\n    const [type, setType] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [company_logo, setCompany_logo] = useState(\"\");\r\n\r\n    const [uniqueJob, setUniqueJob] = useState(jobs[2]);\r\n    const [specifiedJobs, setSpecifiedJobs] = useState([]);\r\n\r\n    function getJob(){\r\n        const job = jobs[3];\r\n        setUniqueJob(job);\r\n    }\r\n\r\n    function getJobs(){\r\n        // const sJ = fetch(\"https://jobs.github.com/positions.json\");\r\n        // const sJ = jobs;\r\n        // setSpecifiedJobs(sJ);\r\n        \r\n        // for(var i in jobs){\r\n        //     // setSpecifiedJobs(specifiedJobs.push(i));\r\n        //     console.log(i);\r\n        // }\r\n        jobs.map(item => console.log(item));\r\n    }\r\n\r\n    function changeUniqueJob(newJob: Job){\r\n        setUniqueJob(newJob);\r\n    }\r\n\r\n    function generateJobCard(prop:Job){\r\n        setUniqueJob(prop);\r\n        return(\r\n            <JobCard/>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <JobsContext.Provider value={{\r\n            type,\r\n            location,\r\n            title,\r\n            description,\r\n            company_logo,\r\n            uniqueJob,\r\n            getJob,\r\n            generateJobCard,\r\n            getJobs\r\n        }}>\r\n            {children}\r\n        </JobsContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}